name: Build, Push Docker Image, and Run Selenium Tests

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to DockerHub (or any Docker registry)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker image using Docker Compose
      - name: Build Docker image
        run: |
          docker-compose -f docker-compose.yml build

      # Step 5: Push Docker image to Docker registry
      - name: Push Docker image
        run: |
          docker-compose -f docker-compose.yml push

      # Step 6: Run Selenium tests in Docker container
      - name: Run Selenium tests
        run: |
          # Start Docker container using the image built with Docker Compose
          docker-compose -f docker-compose.yml up -d

          # Run Selenium tests using docker exec or a testing framework
          docker exec -t my-container-name python -m unittest discover -s tests/  # Example: Running Python tests inside the container

          # Optionally, wait for tests to finish, or log the output
          docker logs my-container-name  # This shows logs to check test results

          # Shut down Docker containers after the tests are done
          docker-compose -f docker-compose.yml down
