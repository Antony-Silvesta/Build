name: Build, Test, and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Check Docker version (Optional, for debugging)
      - name: Check Docker version
        run: docker --version

      # Step 4: Build Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: . # Context is the root of the repository
          push: true
          tags: ghcr.io/jebashinba/my-image:latest

      # Step 5: Set up Python environment (since you are using Selenium with Python)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 6: Install dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 7: Build Docker image again with dependencies
      - name: Build Docker image with Selenium dependencies
        run: |
          docker build -t my-selenium-image .

      # Step 8: Run Selenium tests in the Docker container
      - name: Run Selenium tests
        run: |
          docker run --rm my-selenium-image bash -c "python3 -m unittest discover -s tests"
        # This assumes your tests are in a `tests/` folder, adjust as needed.

