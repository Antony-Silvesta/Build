name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
      - 'release/*'    # Trigger on release branches
  pull_request:
    branches:
      - main
  workflow_dispatch:    # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 4: Install dependencies with cache
      - name: Install Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: pip install -r requirements.txt

      # Step 5: Linting
      - name: Lint Python code
        run: |
          pip install flake8
          flake8 .

      # Step 6: Unit Tests with Coverage
      - name: Run tests
        run: |
          pip install pytest pytest-cov
          pytest --cov=app tests/

      # Step 7: Conditional Test Runs for Integration Tests
      - name: Run integration tests
        if: github.event_name == 'push' && startsWith(github.ref_name, 'release/')
        run: |
          pytest tests/integration/

      # Step 8: Conditional Skipping for Docs or README Changes
      - name: Check if only docs/README changed
        id: check-docs
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qvE 'docs/|README.md'; then
            echo "not-docs=true" >> $GITHUB_ENV
          else
            echo "not-docs=false" >> $GITHUB_ENV
      - name: Skip workflow for docs/README-only changes
        if: env.not-docs == 'false'
        run: echo "Skipping build for docs/README-only changes."

      # Step 9: Build Docker Image
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/jebashinba/my-image:latest
            ghcr.io/jebashinba/my-image:${{ github.sha }}

      # Step 10: Multi-Platform Docker Builds
      - name: Multi-platform Docker build
        uses: docker/setup-buildx-action@v2
      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/jebashinba/my-image:latest
            ghcr.io/jebashinba/my-image:${{ github.sha }}

      # Step 11: Scan Docker image for vulnerabilities
      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/jebashinba/my-image:latest

      # Step 12: Deploy to Staging
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/main' && success()
        run: |
          echo "Deploying to staging environment"
          # Add deployment scripts here

      # Step 13: Notify on Failure
      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          text: |
            "Workflow failed for commit ${{ github.sha }} on branch ${{ github.ref_name }}."
